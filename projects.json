
{
    "Projects": [
        {
            "name": "PROJECT å¤©",
            "image": "https://i.imgur.com/plwmM4E.jpg",
            "tools": ["React Native", "National Parks Services API", "OpenWeatherMap API", "Google Maps Platform"],
            "links": [
                ["GitHub", "https://i.imgur.com/RUBN3H3.jpg"]
            ],
            "bullets": [
                "React Native app for nature and outdoor enthusiasts!",
                "Reports live temperature and weather data for ~500 historical sites and national parks across the US"
            ],
            "read_more":"Project å¤© (pronounced Ti-en; defn. \"Sky\" in Mandarin) is a React Native app that maps out live temperature and weather data for ~500 historical sites and national parks across the United States in Google Maps. In the last couple years, I have become more in-tune with nature, going out hiking friends almost every week and trekking across almost every trail in Orange County, California. In the summer of 2020 while interviewing for a fullstack position at SpringGem Weather Information, I was tasked a coding challenge to create a React Native app that reported live temperature and weather data for several arbitrary geographical coordinates. Inspired by this challenge, I had the idea to apply the challengeâ€™s concept of mapping out live weather data to United States National Parks. And that was how Project å¤© was conceived.\\nAs per the coding challengeâ€™s specifications, Project å¤©'s UI is coded with React-Native. Geographic coordinates for all 497 national parks were fetched through the National Parks Servicesâ€™ REST API and marked on a Google Maps component generated through Google Maps Platform. By entering these coordinates into the OpenWeatherMap API, I was able to give each marker a popover displaying live temperature and weather statistics at that coordinate.\\nFor me, Project å¤© is another milestone project not only because it was my first mobile app and one that used many REST APIs, but also because it was one of my first projects that I had an original idea for and that I did for fun. Not to mention, I also speedran this project, finishing it in around a weekâ€™s time. When I first started attending university, I was clueless about software development and could at first only follow tutorials and coding exercises that I barely understood. It was a slow process, and oftentimes I would find myself banging my head against a wall. However, through persistence and many attempts, I would create my first legitimate side project, Colorful Calculator. Each side project after that was less daunting but were still learning experiences. Six months later, I surprise myself with how far my React development skills have grown with Project å¤©."
        },
        {
            "name": "ALBeRT",
            "image": "https://i.imgur.com/Oxk90Vp.jpg",
            "tools": ["MongoDB", "Express", "React", "NodeJS", "TypeScript", "AWS EC2"],
            "links": [
                ["GitHub", "https://github.com/RYLiang18/albert"]
            ],
            "bullets": [
                "Stands for Awesome Legendary BoardgamE Realtime Tracker",
                "Named the app after my friend, who loves playing boardgames",
                "Learned the MERN stack to develop a webapp that tracks playersâ€™ points in board games across multiple playing sessions"
            ],
            "read_more": "ALBeRT is a front-to-back webapp that I developed and hosted on AWS while learning the MERN (MongoDB, Express, React, & NodeJS) web-dev stack. This projectâ€™s purpose is to keep track of playersâ€™ points in board games across multiple playing sessions. Looking back, ALBeRT could have been much simpler by using something like Firebase Cloud Firestore instead of MongoDB and Express, but I am still glad that I used the MERN stack since I still learned a lot from it.\\nAs a computer science student and someone who still plays boardgames in the digital era, I figured that creating a point-keeping webapp would be a great way to learn about backend development while creating something useful to me and my friends. With ALBeRT, gone are the primitive days of using paper and pencil to track player points ðŸ˜‚!\\nEven though this project only scratches the surface of the MERN stack, building out my own backend taught me a lot about REST APIs, CRUD, differences between HTTP and HTTPS, NoSQL databases, hosting backends with AWS EC2, hiding API keys with gitignore, and much, much more. On the frontend side of things, I learned a lot about React component lifecycles, React Router, and using Axios to send HTTP requests. Since creating this project, my free AWS EC2 instance has expired, so I plan to look into other backend hosting services like Heroku."
        }
    ]
}